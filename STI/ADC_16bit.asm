;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                     FEVEREIRO DE 2023                           *
;*                 BASEADO NO EXEMPLO DO LIVRO                     *
;*           Desbravando o PIC. David José de Souza                *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES

		;COLOQUE AQUI SUAS NOVAS VARIÁVEIS
		;NÃO ESQUEÇA COMENTÁRIOS ESCLARECEDORES

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

; NESSE PROGRAMA, APENAS UMA INTERRUPÇÃO ACONTECE, QUE É A GERADA
; PELO TÉRMINO DO PROCESSO DE CONVERSÃO REALIZADO PELO CONVERSOR
; ANALÓGICO/DIGITAL, DESTA FORMA, APENAS ELA NECESSITA SER TRATADA.

; O TRATAMENTO DA INTERRUPÇÃO CONSISTE EM VERIFICAR O RESULTADO DA CONVERSÃO
; A/D DO SINAL ANALÓGICO DE ENTRADA EM GP1. O VALOR DO RESULTADO DA CONVERSÃO
; É UM NUMERO DE 10 BITS PROPORCIONAL AO VALOR DE REFERÊNCIA, OU SEJA, 5V.
; COMO FORMA DE SIMPLIFICAR, A JUSTIFICAÇÃO À ESQUERDA DO RESULTADO DA
; CONVERSÃO FOI SELECIONADA, DE FORMA COM QUE É POSSÍVEL LEVAR EM CONSIDERAÇÃO
; OS 8 BITS MAIS SIGNIFICATIVOS VERIFICANDO APENAS O REGISTRADOR ADRESH.
; O RESULTADO DA CONVERSÃO É ENTÃO COMPARADO A VALORES LITERAIS QUE REPRESENTAM
; VALORES DE TENSÃO ESPECIFICOS. COMO SÃO 4 PINOS DE SAÍDA, 16 INTERVALOS PODEM 
; SER REPRESENTADO POR SUAS COMBINAÇÕES, ENTÃO, CONSIDERANDO GP0 O BIT MENOS
; SIGNIFICATIVO DA PALAVRA DE SAÍDA E GP5 COMO O MAIS SIGNIFICATIVO, TEMOS QUE
; OS INTERVALOS E SUAS REPRESENTAÇÕES PELA PALAVRA DE SAÍDA SEGUEM A TABELA A 
; SEGUIR:
;   |    INTERVALO     | PALAVRA  |
;   | 0.000V - 0.3125V |  '0000'  | C
;   | 0.3125V - 0.625V |  '0001'  | C
;   | 0.625V - 0.9375V |  '0010'  | C
;   | 0.9375V - 1.250V |  '0011'  | C
;   | 1.250V - 1.5625V |  '0100'  | C
;   | 1.5625V - 1.875V |  '0101'  | C
;   | 1.875V - 2.1875V |  '0110'  | C
;   | 2.1875V - 2.500V |  '0111'  | C
;   | 2.500V - 2.8125V |  '1000'  | C
;   | 2.8125V - 3.125V |  '1001'  | C
;   | 3.125V - 3.4375V |  '1010'  | C
;   | 3.4375V - 3.750V |  '1011'  | C
;   | 3.750V - 4.0625V |  '1100'  | C
;   | 4.0625V - 4.375V |  '1101'  | C
;   | 4.375V - 4.6875V |  '1110'  | C
;   | 4.6875V - 5.000V |  '1111'  | C
	
	
	BANK0
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH
	CLRF	GPIO		;LIMPA OS PINOS DE SAÍDA DE GPIO.
	
	SUBLW	.128		;SE WORK FOR MENOR QUE 128, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0        ;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MAIOR QUE 128, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 2.5V.
	GOTO	_GT2.5V	        ;SE A TENSÃO FOR MAIOR QUE 2.5V, VAI PARA A PROXIMA VERIFICAÇÃO
	
	
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.64		;SE WORK FOR MENOR QUE 64, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 64, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 1.25V.
	GOTO	_GT1.25V
	
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.32		;SE WORK FOR MENOR QUE 32, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 32, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 0.625V.
	GOTO	_GT0.625V	
	
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.16		;SE WORK FOR MENOR QUE 32, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 16, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 0.3125V.
	BSF	GPIO, 0		; "SETTA" GP0 CASO A TENSÃO SEJA MAIOR QUE 0.3125V
	
	GOTO	SAI_INT		;SAI DA INTERRUPÇÃO POIS O INTERVALO JÁ FOI ENCOTRADO E OS PINOS DE SAÍDA JÁ FORAM CONFIGURADOS.
	
_GT0.625V
	BSF	GPIO, 2		;COMO A TENSÃO ESTÁ ENTRE 0.625V E 1.25V, GP2 É "SETTADO"
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.48		;SE WORK FOR MENOR QUE 48, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 48, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 0.9375V.
	BSF	GPIO,0		;"SETTA" GP0 CASO A TENSÃO SEJA MAIOR QUE 0.9375V
	
	GOTO	SAI_INT		;SAI DA INTERRUPÇÃO POIS O INTERVALO JÁ FOI ENCOTRADO E OS PINOS DE SAÍDA JÁ FORAM CONFIGURADOS.
	
_GT1.25V
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.96		;SE WORK FOR MENOR QUE 96, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 96, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 1.875V.
	GOTO	_GT1.875V
	
	BSF	GPIO,4		;COMO A TENSÃO ESTÁ ENTRE 1.25V E 1.875V, GP4 É "SETTADO".
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.80		;SE WORK FOR MENOR QUE 80, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 80, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 1.5625V.
	BSF	GPIO,0		;"SETTA" GP0 CASO A TENSÃO SEJA MAIOR QUE 1.5625V
	
	GOTO SAI_INT		;SAI DA INTERRUPÇÃO POIS O INTERVALO JÁ FOI ENCOTRADO E OS PINOS DE SAÍDA JÁ FORAM CONFIGURADOS.
	
_GT1.875V
	BSF	GPIO,2
	BSF	GPIO,4		;COMO A TENSÃO ESTÁ ENTRE 1.875V E 2.5V, GP2 E GP4 SÃO "SETTADOS"
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.112		;SE WORK FOR MENOR QUE 112, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 112, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 2.1875V.
	BSF	GPIO,0		;"SETTA" GP0 CASO A TENSÃO SEJA MAIOR QUE 2.1875V
	
	GOTO SAI_INT		;SAI DA INTERRUPÇÃO POIS O INTERVALO JÁ FOI ENCOTRADO E OS PINOS DE SAÍDA JÁ FORAM CONFIGURADOS.
	
_GT2.5V
	BSF	GPIO,5		;SETA O VALOR EM GP5, JÁ QUE A TENSÃO É MAIOR QUE 2.5V.
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.192		;SE WORK FOR MENOR QUE 192, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 192, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 3.75V.
	GOTO	_GT3.75V	;CASO A TENSÃO SEJA MAIOR QUE 3.75V, VAI PARA A PRÓXIMA VERIFICAÇÃO
	
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.160		;SE WORK FOR MENOR QUE 160, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 160, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 3.125V.
	GOTO	_GT3.125V	;CASO A TENSÃO SEJA MAIOR QUE 3.125V, VAI PARA A PRÓXIMA VERIFICAÇÃO
	
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.144		;SE WORK FOR MENOR QUE 144, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 144, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 2.8125V.
	BSF	GPIO,0		;"SETTA" GP0 CASO A TENSÃO SEJA MAIOR QUE 2.8125V
	
	GOTO SAI_INT		;SAI DA INTERRUPÇÃO POIS O INTERVALO JÁ FOI ENCOTRADO E OS PINOS DE SAÍDA JÁ FORAM CONFIGURADOS.
	
_GT3.125V
	BSF	GPIO, 2		;COMO A TENSÃO ESTÁ ENTRE 3.125V E 3.75V, GP2 É "SETTADO"
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.176		;SE WORK FOR MENOR QUE 176, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 176, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 3.4375V.
	BSF	GPIO,0		;"SETTA" GP0 CASO A TENSÃO SEJA MAIOR QUE 3.4375V
	
	GOTO SAI_INT		;SAI DA INTERRUPÇÃO POIS O INTERVALO JÁ FOI ENCOTRADO E OS PINOS DE SAÍDA JÁ FORAM CONFIGURADOS.
	
_GT3.75V
	BSF	GPIO,4		;SETA O VALOR EM GP2, JÁ QUE A TENSÃO É MAIOR QUE 3.75V.
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.224		;SE WORK FOR MENOR QUE 224, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 171, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 4.375V.
	GOTO	_GT4.375V	;CASO A TENSÃO SEJA MAIOR QUE 4.375V, VAI PARA A PRÓXIMA VERIFICAÇÃO
	
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.208		;SE WORK FOR MENOR QUE 208, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 208, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 4.0625V.
	BSF	GPIO,0		;"SETTA" GP0 CASO A TENSÃO SEJA MAIOR QUE 4.0625V
	
	GOTO SAI_INT		;SAI DA INTERRUPÇÃO POIS O INTERVALO JÁ FOI ENCOTRADO E OS PINOS DE SAÍDA JÁ FORAM CONFIGURADOS.
	
_GT4.375V
	BSF	GPIO,2		;SETA O VALOR EM GP4, JÁ QUE A TENSÃO É MAIOR QUE 4.375V.
	MOVF	ADRESH,0        ;ESCREVE EM WORK O VALOR ARMAZENDO EM ADRESH, JÁ QUE O TESTE ANTERIOR AFETOU O VALOR ARMAZENADO EM WORK
	SUBLW	.240		;SE WORK FOR MENOR QUE 240, O CARRY É SETADO. CASO CONTRÁRIO, ELE É LIMPADO.
	BTFSS	STATUS,0	;VERIFICA SE A CONVERSÃO RESULTOU NUM VALOR MENOR QUE 205, ISTO É, SE A TENSÃO DE ENTRADA É MAIOR QUE 4.6875V.
	BSF	GPIO,0		;CASO A TENSÃO SEJA MAIOR QUE 4.6875V, "SETA" GP0, POIS A TENSÃO É MAIOR QUE 4.6875V.
	
	
	
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	BANK0
	BCF	PIR1,6
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

SUBROTINA1

	;CORPO DA ROTINA

	RETURN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* O PROGRAMA CONSISTE EM INICIAR O PROCESSO DE CONVERSÃO A/D E    *
;* ENTÃO COLOCAR O MICROCONTROLADOR EM MODO DE SLEEP, ATÉ QUE ELE  *
;* SEJA "ACORDADO" PELA INTERRUPÇÃO GERADA PELO CONVERSOR A/D AO   *
;* FINALIZAR O PROCESSO DE CONVERSÃO, SETANDO OS PINOS DE GPIO DE  *
;* ACORDO COM O VALOR CONVERTIDO.                                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00001010'	;CONFIGURA AS PORTAS DO GPIO. GP1 E GP3 SÃO CONFIGURADAS COMO ENTRADAS E GP0, GP2, GP4 E GP5 SÃO CONFIGURADAS COMO SAÍDAS
	MOVWF	TRISIO
	MOVLW	B'00010010'
	MOVWF	ANSEL		;CONFIGURA O CLOCK DE CONVERSÃO ANÁLOGICO DIGITAL Fosc/8 E O PINO GP1 COMO ENTRADA ANALÓGICA
	MOVLW	B'00000100'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'11000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	MOVLW	B'01000000'
	MOVWF	PIE1		;ATIVA A INTERRUPÇÃO CAUSADA PELO CONVERSOR A/D
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO
	MOVLW	B'00000101'
	MOVWF	ADCON0		;CONFIGURA O CONVERSOR ANALÓGICO DIGITAL PARA CONSIDERAR O AN1 COMO ENTRADA, VDD COMO VALOR DE REFERÊNCIA E SAÍDA JUSTIFICADA À ESQUERDA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN

	;CORPO DA ROTINA PRINCIPAL
	BANK0
	BSF ADCON0,1	    ;INICIA O PROCESSO DE CONVERSÃO A/D
	SLEEP		    ;PÕE O MICROCONTROLADOR PARA DORMIR, POUPANDO ENERGIA, ATÉ QUE A INTERUPÇÃO GERADA PELO TÉRMINO DO PROCESSO DE CONVERSÃO A/D SEJA DISPARADA.
	GOTO	MAIN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END



